$date
	Fri Jun 27 16:16:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_alu $end
$var wire 4 ! xor1 [3:0] $end
$var wire 4 " sum [3:0] $end
$var wire 4 # sub [3:0] $end
$var wire 4 $ or1 [3:0] $end
$var wire 1 % carry $end
$var wire 1 & borrow $end
$var wire 4 ' and1 [3:0] $end
$var reg 4 ( in1 [3:0] $end
$var reg 4 ) in2 [3:0] $end
$var reg 3 * select [2:0] $end
$scope module uut $end
$var wire 4 + in1 [3:0] $end
$var wire 4 , in2 [3:0] $end
$var wire 3 - select [2:0] $end
$var reg 4 . and1 [3:0] $end
$var reg 1 & borrow $end
$var reg 1 % carry $end
$var reg 4 / or1 [3:0] $end
$var reg 4 0 sub [3:0] $end
$var reg 4 1 sum [3:0] $end
$var reg 4 2 xor1 [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 2
b110 1
b0 0
b0 /
b0 .
b0 -
b1100 ,
b1010 +
b0 *
b1100 )
b1010 (
b0 '
0&
1%
b0 $
b0 #
b110 "
b0 !
$end
#50
1&
b1101 #
b1101 0
0%
b0 "
b0 1
b1110 )
b1110 ,
b1011 (
b1011 +
b1 *
b1 -
#100
b1010 '
b1010 .
0&
b0 #
b0 0
b1010 (
b1010 +
b10 *
b10 -
#150
b1110 $
b1110 /
b0 '
b0 .
b1000 )
b1000 ,
b1110 (
b1110 +
b11 *
b11 -
#200
b110 !
b110 2
b0 $
b0 /
b100 )
b100 ,
b10 (
b10 +
b100 *
b100 -
#250
